{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EmployeeModel } from './employe-dash board.model';\nexport let EmployeDashboardComponent = class EmployeDashboardComponent {\n  constructor(formbuilber, api) {\n    this.formbuilber = formbuilber;\n    this.api = api;\n    this.employeeModelObj = new EmployeeModel();\n  }\n  ngOnInit() {\n    this.formValue = this.formbuilber.group({\n      firstName: [' '],\n      lastName: [' '],\n      email: [' '],\n      mobile: [' '],\n      salary: [' ']\n    });\n    this.getAllEmployee();\n  }\n  clickAddEmployee() {\n    this.formValue.reset();\n    this.showAdd = true;\n    this.showUpdate = false;\n  }\n  postEmployeeDetails() {\n    this.employeeModelObj.firstName = this.formValue.value.firstName;\n    this.employeeModelObj.lastName = this.formValue.value.lastName;\n    this.employeeModelObj.email = this.formValue.value.email;\n    this.employeeModelObj.mobile = this.formValue.value.mobile;\n    this.employeeModelObj.salary = this.formValue.value.salary;\n    this.api.postEmploye(this.employeeModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"Employee Added Successfully!\");\n      let ref = document.getElementById('cancel');\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    }, err => {\n      alert(\"Something Went wrong\");\n    });\n  }\n  getAllEmployee() {\n    this.api.getEmployee().subscribe(res => {\n      this.employeeData = res;\n    });\n  }\n  deleteEmployee(row) {\n    this.api.deleteEmployee(row.id).subscribe(res => {\n      alert(\"Employee Deleted\");\n      this.getAllEmployee();\n    });\n  }\n  onEdit(row) {\n    this.showAdd = false;\n    this.showUpdate = true;\n    this.employeeModelObj.id = row.id;\n    this.formValue.controls['firstName'].setValue(row.firstName);\n    this.formValue.controls['firstName'].setValue(row.lastNametName);\n    this.formValue.controls['firstName'].setValue(row.email);\n    this.formValue.controls['firstName'].setValue(row.mobile);\n    this.formValue.controls['firstName'].setValue(row.salary);\n  }\n  updateEmployeeDetails() {\n    this.employeeModelObj.firstName = this.formValue.value.firstName;\n    this.employeeModelObj.lastName = this.formValue.value.lastName;\n    this.employeeModelObj.email = this.formValue.value.email;\n    this.employeeModelObj.mobile = this.formValue.value.mobile;\n    this.employeeModelObj.salary = this.formValue.value.salary;\n    this.api.updateEmployee(this.employeeModelObj, this.employeeModelObj.id).subscribe(res => {\n      alert(\"Updated Successfully\");\n      let ref = document.getElementById('cancel');\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    });\n  }\n};\nEmployeDashboardComponent = __decorate([Component({\n  selector: 'app-employe-dashboard',\n  templateUrl: './employe-dashboard.component.html',\n  styleUrls: ['./employe-dashboard.component.css']\n})], EmployeDashboardComponent);","map":{"version":3,"names":["Component","EmployeeModel","EmployeDashboardComponent","constructor","formbuilber","api","employeeModelObj","ngOnInit","formValue","group","firstName","lastName","email","mobile","salary","getAllEmployee","clickAddEmployee","reset","showAdd","showUpdate","postEmployeeDetails","value","postEmploye","subscribe","res","console","log","alert","ref","document","getElementById","click","err","getEmployee","employeeData","deleteEmployee","row","id","onEdit","controls","setValue","lastNametName","updateEmployeeDetails","updateEmployee","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/salijgerenaia/Documents/AngularCRUD/AngularCRUD/src/app/employe-dashboard/employe-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Form, FormBuilder, FormGroup } from '@angular/forms'; \nimport { ApiService } from '../shared/api.service';\nimport { EmployeeModel } from './employe-dash board.model';\n\n@Component({\n  selector: 'app-employe-dashboard',\n  templateUrl: './employe-dashboard.component.html',\n  styleUrls: ['./employe-dashboard.component.css']\n})\nexport class EmployeDashboardComponent {\n\n  formValue !: FormGroup;\n  employeeModelObj : EmployeeModel = new EmployeeModel();\n  employeeData !: any;\n  showAdd!: boolean;\n  showUpdate !: boolean;\n  row: any;\n  constructor(private formbuilber: FormBuilder,\n    private api : ApiService) { }\n\n  ngOnInit(): void {\n    this.formValue = this.formbuilber.group({\n      firstName : [' '],\n      lastName : [' '],\n      email : [' '],\n      mobile : [' '],\n      salary : [' ']\n    })\n    this.getAllEmployee();\n  }\n  clickAddEmployee(){\n    this.formValue.reset();\n    this.showAdd = true;\n    this.showUpdate = false;\n  }\n  postEmployeeDetails(){\n    this.employeeModelObj.firstName = this.formValue.value.firstName;\n    this.employeeModelObj.lastName = this.formValue.value.lastName;\n    this.employeeModelObj.email = this.formValue.value.email;\n    this.employeeModelObj.mobile = this.formValue.value.mobile;\n    this.employeeModelObj.salary = this.formValue.value.salary;\n\n    this.api.postEmploye(this.employeeModelObj)\n    .subscribe(res=>{\n      console.log(res);\n      alert(\"Employee Added Successfully!\")\n      let ref = document.getElementById('cancel')\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    },\n    err=>{\n      alert(\"Something Went wrong\");\n    })\n  }\n  getAllEmployee(){\n    this.api.getEmployee()\n    .subscribe(res=>{\n      this.employeeData = res;\n    })\n  }\n  deleteEmployee(row: any){\n    this.api.deleteEmployee(row.id)\n    .subscribe(res=>{\n      alert(\"Employee Deleted\");\n      this.getAllEmployee();\n    })\n  }\n  onEdit(row: any){\n    this.showAdd = false;\n    this.showUpdate = true;\n    this.employeeModelObj.id = row.id;\n    this.formValue.controls['firstName'].setValue(row.firstName);\n    this.formValue.controls['firstName'].setValue(row.lastNametName);\n    this.formValue.controls['firstName'].setValue(row.email);\n    this.formValue.controls['firstName'].setValue(row.mobile);\n    this.formValue.controls['firstName'].setValue(row.salary);\n  }\n  updateEmployeeDetails(){\n    this.employeeModelObj.firstName = this.formValue.value.firstName;\n    this.employeeModelObj.lastName = this.formValue.value.lastName;\n    this.employeeModelObj.email = this.formValue.value.email;\n    this.employeeModelObj.mobile = this.formValue.value.mobile;\n    this.employeeModelObj.salary = this.formValue.value.salary;\n\n    this.api.updateEmployee(this.employeeModelObj,this.employeeModelObj.id)\n    .subscribe(res=>{\n      alert(\"Updated Successfully\");\n      let ref = document.getElementById('cancel')\n      ref?.click();\n      this.formValue.reset();\n      this.getAllEmployee();\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}