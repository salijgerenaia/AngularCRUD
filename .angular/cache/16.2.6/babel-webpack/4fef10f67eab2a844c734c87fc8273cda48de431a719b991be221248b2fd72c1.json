{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  postEmploye(data) {\n    return this.http.post(\"http://localhost:3000/posts\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  getEmployee() {\n    return this.http.get(\"http://localhost:3000/posts\").pipe(map(res => {\n      return res;\n    }));\n  }\n  updateEmployee(data, id) {\n    return this.http.get(`http://localhost:3000/posts/${id}`, data).pipe(map(res => {\n      return res;\n    }));\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`http://localhost:3000/posts/${id}`).pipe(map(res => res));\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","ApiService","constructor","http","postEmploye","data","post","pipe","res","getEmployee","get","updateEmployee","id","deleteEmployee","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/salijgerenaia/Documents/AngularCRUD/AngularCRUD/src/app/shared/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport {map} from 'rxjs/operators'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http : HttpClient) { }\npostEmploye(data: any){\n  return this.http.post<any>(\"http://localhost:3000/posts\", data)\n  .pipe(map((res:any)=>{\n    return res;\n  }))\n\n}\ngetEmployee(){\n  return this.http.get<any>(\"http://localhost:3000/posts\")\n  .pipe(map((res:any)=>{\n    return res;\n  }))\n}\nupdateEmployee(data: any,id: number){\n  return this.http.get<any>(`http://localhost:3000/posts/${id}`, data)\n  .pipe(map((res:any)=>{\n    return res;\n  }))\n}\ndeleteEmployee(id: number) {\n  return this.http.delete<any>(`http://localhost:3000/posts/${id}`)\n    .pipe(map((res: any) => res));\n}\n"],"mappings":"AAEA,SAAQA,GAAG,QAAO,gBAAgB;;;AAIlC,OAAM,MAAOC,UAAU;EAErBC,YAAoBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAC3CC,WAAWA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAM,6BAA6B,EAAED,IAAI,CAAC,CAC9DE,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MACnB,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EAEL;EACAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAM,6BAA6B,CAAC,CACvDH,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MACnB,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EACAG,cAAcA,CAACN,IAAS,EAACO,EAAU;IACjC,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAM,+BAA+BE,EAAE,EAAE,EAAEP,IAAI,CAAC,CACnEE,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MACnB,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EACAK,cAAcA,CAACD,EAAU;IACvB,OAAO,IAAI,CAACT,IAAI,CAACW,MAAM,CAAM,+BAA+BF,EAAE,EAAE,CAAC,CAC9DL,IAAI,CAACP,GAAG,CAAEQ,GAAQ,IAAKA,GAAG,CAAC,CAAC;EACjC;EAAC,QAAAO,CAAA,G;qBAzBYd,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVnB,UAAU;IAAAoB,OAAA,EAAVpB,UAAU,CAAAqB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}